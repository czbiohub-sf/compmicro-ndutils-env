name: Test pip and conda installs, build Docker image

on:
  push:
    tags:
      - '*'

permissions:
  contents: write
  packages: write

env:
  REF_NAME: ${{ github.head_ref || github.ref_name }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Confirm requirements.txt is up to date. (If not you should run "pip-compile").
      run: |
        mv requirements.txt requirements.txt.committed
        python3 -m pip install .[dev]
        pip-compile
        diff requirements.txt requirements.txt.committed  # Nonzero exit code if not identical
    - name: Install package via pip
      run: |
        python3 -m pip install .
    - name: Test pip installed version with unittest
      run: |
        python3 -m unittest discover
    - name: Install package via conda
      run: |
        $CONDA/bin/conda env update --file environment.yml --name base
    - name: Test Conda installed version with unittest
      run: |
        $CONDA/bin/python3 -m unittest discover
  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout git repo with all tags and history
        uses: actions/checkout@v4
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push Docker image to ghcr
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: ghcr.io/${{ github.repository }}:${{ env.REF_NAME }}
          build-args: |
              REF_NAME=${{ env.REF_NAME }}
  release:
    name: Release pushed tag
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
        run: |
          gh release create "$tag" \
              --repo="$GITHUB_REPOSITORY" \
              --title="${GITHUB_REPOSITORY#*/} ${tag#v}" \
              --generate-notes